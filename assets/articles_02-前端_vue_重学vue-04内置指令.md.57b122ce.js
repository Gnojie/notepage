import{_ as s,o as a,c as n,b as l}from"./app.36577c01.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"v-if","slug":"v-if","link":"#v-if","children":[]},{"level":2,"title":"v-show","slug":"v-show","link":"#v-show","children":[]},{"level":2,"title":"v-for","slug":"v-for","link":"#v-for","children":[]},{"level":2,"title":"v-model","slug":"v-model","link":"#v-model","children":[]},{"level":2,"title":"v-bind简写(😃","slug":"v-bind简写","link":"#v-bind简写","children":[{"level":3,"title":"参数style","slug":"参数style","link":"#参数style","children":[]},{"level":3,"title":"参数class","slug":"参数class","link":"#参数class","children":[]}]},{"level":2,"title":"v-on","slug":"v-on","link":"#v-on","children":[{"level":3,"title":"其他自定义参数：1.组件参数 2.标签属性","slug":"其他自定义参数-1-组件参数-2-标签属性","link":"#其他自定义参数-1-组件参数-2-标签属性","children":[]}]},{"level":2,"title":"自定义指令","slug":"自定义指令","link":"#自定义指令","children":[{"level":3,"title":"拖拽指令v-drag","slug":"拖拽指令v-drag","link":"#拖拽指令v-drag","children":[]}]}],"relativePath":"articles/02-前端/vue/重学vue-04内置指令.md"}'),p={name:"articles/02-前端/vue/重学vue-04内置指令.md"},o=l(`<blockquote><p>在了解过render函数后，我们知道我们开发阶段编写的template代码，都会经过转译成render函数</p><p>所以vue在template模板语法中提供的很多指令都是作用于怎样生成render函数的</p></blockquote><h2 id="v-if" tabindex="-1">v-if <a class="header-anchor" href="#v-if" aria-hidden="true">#</a></h2><p>转译结果 👇</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// &lt;p v-if=&quot;xx&quot;&gt;内容&lt;/p&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(h)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">xx</span><span style="color:#F07178;">) </span><span style="color:#82AAFF;">h</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">p</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">内容</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="v-show" tabindex="-1">v-show <a class="header-anchor" href="#v-show" aria-hidden="true">#</a></h2><p>转译结果 👇</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// &lt;p v-show=&quot;xx&quot;&gt;内容&lt;/p&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(h)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">h</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">p</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      style</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">display</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">xx</span><span style="color:#89DDFF;">?</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">none</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">内容</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="v-for" tabindex="-1">v-for <a class="header-anchor" href="#v-for" aria-hidden="true">#</a></h2><p>转译结果 👇</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// &lt;p v-for=&quot;item in list&quot;&gt;内容&lt;/p&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(h)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">h</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">p</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">内容</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="v-model" tabindex="-1">v-model <a class="header-anchor" href="#v-model" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// &lt;input v-model=&quot;xx&quot; /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">render</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">h</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">h</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      on</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">input</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">emit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="v-bind简写" tabindex="-1">v-bind简写(😃 <a class="header-anchor" href="#v-bind简写" aria-hidden="true">#</a></h2><blockquote><p><a href="https://cn.vuejs.org/v2/api/#v-bind" target="_blank" rel="noreferrer">v-bind - 官方文档</a></p><p><a href="https://cn.vuejs.org/v2/guide/custom-directive.html" target="_blank" rel="noreferrer">自定义指令 - 官方文档</a></p><p><img src="https://kingan-md-img.oss-cn-guangzhou.aliyuncs.com/blog/20220317215853.png" alt=""></p></blockquote><p><code>v-bind:xx=&quot;msg&quot;</code> <code>v-xx</code>是指令,<code>:xx</code>是参数 因此以下简写都是vue的内置指令根据不同参数做的不同处理</p><h3 id="参数style" tabindex="-1">参数style <a class="header-anchor" href="#参数style" aria-hidden="true">#</a></h3><blockquote><p><code>:style=&quot;&quot;</code> 支持数组、对象、字符串</p></blockquote><h3 id="参数class" tabindex="-1">参数class <a class="header-anchor" href="#参数class" aria-hidden="true">#</a></h3><blockquote><p><code>:class=&quot;&quot;</code> 支持数组、对象、字符串</p></blockquote><h2 id="v-on" tabindex="-1">v-on <a class="header-anchor" href="#v-on" aria-hidden="true">#</a></h2><p>this指向，永远指向当前组件实例</p><p>怎么做到$event可以写任意位置而不是第一个参数</p><h3 id="其他自定义参数-1-组件参数-2-标签属性" tabindex="-1">其他自定义参数：1.组件参数 2.标签属性 <a class="header-anchor" href="#其他自定义参数-1-组件参数-2-标签属性" aria-hidden="true">#</a></h3><h2 id="自定义指令" tabindex="-1">自定义指令 <a class="header-anchor" href="#自定义指令" aria-hidden="true">#</a></h2><p>常见用处</p><p>总结场景：</p><ul><li>需要封装的公共逻辑是要操作DOM的时候</li></ul><h3 id="拖拽指令v-drag" tabindex="-1">拖拽指令v-drag <a class="header-anchor" href="#拖拽指令v-drag" aria-hidden="true">#</a></h3>`,28),e=[o];function t(c,r,i,F,y,D){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{h as __pageData,u as default};
