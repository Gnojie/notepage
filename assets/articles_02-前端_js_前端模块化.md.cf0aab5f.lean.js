import{_ as a,o as l,c as o,a as s,d as n}from"./app.7fe3e362.js";const m=JSON.parse(`{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"模块化背景","slug":"模块化背景","link":"#模块化背景","children":[]},{"level":2,"title":"模块化方案环境支持","slug":"模块化方案环境支持","link":"#模块化方案环境支持","children":[]},{"level":2,"title":"CommonJs","slug":"commonjs","link":"#commonjs","children":[{"level":3,"title":"从0实现简易Commonjs","slug":"从0实现简易commonjs","link":"#从0实现简易commonjs","children":[]},{"level":3,"title":"Commonjs获取动态值","slug":"commonjs获取动态值","link":"#commonjs获取动态值","children":[]},{"level":3,"title":"关于Commonjs的require是动态引用","slug":"关于commonjs的require是动态引用","link":"#关于commonjs的require是动态引用","children":[]},{"level":3,"title":"不用exports.xx='' 而是exports={xx:''} 来存储变量会怎样","slug":"不用exports-xx-而是exports-xx-来存储变量会怎样","link":"#不用exports-xx-而是exports-xx-来存储变量会怎样","children":[]}]},{"level":2,"title":"ES Module","slug":"es-module","link":"#es-module","children":[{"level":3,"title":"node环境","slug":"node环境","link":"#node环境","children":[]},{"level":3,"title":"浏览器环境","slug":"浏览器环境","link":"#浏览器环境","children":[]},{"level":3,"title":"ESM识别的资源路径","slug":"esm识别的资源路径","link":"#esm识别的资源路径","children":[]},{"level":3,"title":"接收的是动态的值","slug":"接收的是动态的值","link":"#接收的是动态的值","children":[]},{"level":3,"title":"ESM自动严格模式","slug":"esm自动严格模式","link":"#esm自动严格模式","children":[]}]},{"level":2,"title":"编译时、运行时、静态化","slug":"编译时、运行时、静态化","link":"#编译时、运行时、静态化","children":[{"level":3,"title":"ESM的编译时","slug":"esm的编译时","link":"#esm的编译时","children":[]},{"level":3,"title":"CJS的运行时","slug":"cjs的运行时","link":"#cjs的运行时","children":[]},{"level":3,"title":"nodejs中共用两种模块化方式会怎样","slug":"nodejs中共用两种模块化方式会怎样","link":"#nodejs中共用两种模块化方式会怎样","children":[]}]},{"level":2,"title":"ESM可以运行时的import()","slug":"esm可以运行时的import","link":"#esm可以运行时的import","children":[]},{"level":2,"title":"ES6与CommonJS的区别","slug":"es6与commonjs的区别","link":"#es6与commonjs的区别","children":[]},{"level":2,"title":"esm的限制与解决方案","slug":"esm的限制与解决方案","link":"#esm的限制与解决方案","children":[{"level":3,"title":"代码需要基于es开发","slug":"代码需要基于es开发","link":"#代码需要基于es开发","children":[]},{"level":3,"title":"第三方资源的导出要支持ESM","slug":"第三方资源的导出要支持esm","link":"#第三方资源的导出要支持esm","children":[]},{"level":3,"title":"不支持esm的浏览器","slug":"不支持esm的浏览器","link":"#不支持esm的浏览器","children":[]}]},{"level":2,"title":"思考","slug":"思考","link":"#思考","children":[{"level":3,"title":"1. webpack工程下怎么同时支持CommonJs和ESM规范","slug":"_1-webpack工程下怎么同时支持commonjs和esm规范","link":"#_1-webpack工程下怎么同时支持commonjs和esm规范","children":[]},{"level":3,"title":"2. babel如何把esm编译成commonjs，在node环境中运行","slug":"_2-babel如何把esm编译成commonjs-在node环境中运行","link":"#_2-babel如何把esm编译成commonjs-在node环境中运行","children":[]},{"level":3,"title":"3. webpack、rollup是怎么支持tree shaking","slug":"_3-webpack、rollup是怎么支持tree-shaking","link":"#_3-webpack、rollup是怎么支持tree-shaking","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"articles/02-前端/js/前端模块化.md"}`),p={name:"articles/02-前端/js/前端模块化.md"},e=s("iframe",{src:"//player.bilibili.com/player.html?aid=208982494&bvid=BV1jh411t7eX&cid=435896955&page=1",width:"100%",height:"300px",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true"}," ",-1),t=n("",108),c=s("p",{xx:""},"这也就是为什么抛出数据只能exports.xx 一个个抛出(存储)而不能直接exports =",-1),r=n("",98),y=[e,t,c,r];function F(D,i,C,A,d,u){return l(),o("div",null,y)}const f=a(p,[["render",F]]);export{m as __pageData,f as default};
